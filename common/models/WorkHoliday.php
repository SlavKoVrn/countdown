<?php

namespace common\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "{{%work_holiday}}".
 *
 * @property int $id
 * @property string $name
 * @property string $stock
 * @property int $holiday
 * @property string|null $begin
 * @property string|null $end
 * @property int $status
 * @property int $user
 * @property int $created_at
 * @property int $updated_at
 */
class WorkHoliday extends \yii\db\ActiveRecord
{
    const HOLIDDAY = 1;
    const WORKDAY = 2;
    const CHOOSE_DAY_ARRAY = [
        self::HOLIDDAY => 'Праздник (выходной)',
        self::WORKDAY => 'Рабочий день',
    ];

    const ENABLE_DAY = 1;
    const DISABLE_DAY = 0;
    const CHOOSE_ENABLED_ARRAY = [
        self::ENABLE_DAY => 'Задействовано',
        self::DISABLE_DAY => 'Аннулировано',
    ];


    public $createTimeRange;
    public $createTimeStart;
    public $createTimeEnd;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%work_holiday}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'stock', 'createTimeRange', 'user', 'created_at', 'updated_at'], 'required'],
            [['holiday', 'status', 'user', 'created_at', 'updated_at'], 'integer'],
            [['begin', 'end', 'createTimeRange', 'createTimeStart', 'createTimeEnd'], 'safe'],
            [['name', 'createTimeRange', 'createTimeStart', 'createTimeEnd'], 'string', 'max' => 255],
            [['stock'], 'string', 'max' => 10],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'Ид',
            'name' => 'Название',
            'stock' => 'Биржа',
            'holiday' => 'Праздник, рабочий день',
            'begin' => 'От',
            'end' => 'До',
            'status' => 'Статус',
            'user' => 'Менеджер',
            'created_at' => 'Создан',
            'updated_at' => 'Изменен',
            'createTimeRange' => 'Период',
        ];
    }

    public function behaviors()
    {
        return [
            TimestampBehavior::class,
        ];
    }

    public function beforeSave($insert)
    {
        $this->user = Yii::$app->user->id;
        $this->begin = date('Y-m-d H:i:s',strtotime($this->createTimeStart));
        $this->end = date('Y-m-d H:i:s',strtotime($this->createTimeEnd));

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub

        $this->createTimeRange = date('d.m.Y H:i',strtotime($this->begin)).' - '.date('d.m.Y H:i',strtotime($this->end));
        $this->createTimeStart = date('d.m.Y H:i',strtotime($this->begin));
        $this->createTimeEnd =   date('d.m.Y H:i',strtotime($this->end));
    }

    public static function getMagager($id)
    {
        return User::findOne($id)->username;
    }
}
